# 4.LSTM(RNN) Model
# Long Short-Term Memory (LSTM) Network model
lstm_model = Sequential([
    LSTM(128, input_shape=(X_train.shape[1], 1)),
    Dense(1, activation='sigmoid')
])

lstm_model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])
lstm_model.fit(X_train, y_train, epochs=10, batch_size=128)
lstm_probabilities = lstm_model.predict(X_test)
lstm_predictions = (lstm_probabilities > 0.5).astype(int)
lstm_accuracy = lstm_model.evaluate(X_test, y_test)
# print("Accuracy:", accuracy)
print('Test set\n  Loss: {:0.3f}\n  Accuracy: {:0.3f}'.format(lstm_accuracy[0],lstm_accuracy[1]))
